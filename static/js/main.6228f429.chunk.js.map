{"version":3,"sources":["logo.svg","App.js"],"names":["module","exports","carnet_field","document","querySelector","schedule_dropdown","late_switch","submit_btn","table_body","carnet_regex","RegExp","student_list","serial","addEventListener","carnet","value","schedule","options","selectedIndex","text","late","checked","campo_borrar","test","datetime_string","Date","toLocaleString","push","addStudent","printArray","innerHTML","forEach","element","new_row","createElement","classList","add","horario","ingreso","tarde","new_cell","new_btn","className","innerText","id","event","id_actual","target","pos","splice","appendChild","alert","keyCode","click"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,oFCIvCC,EAAeC,SAASC,cAAc,iBACtCC,EAAoBF,SAASC,cAAc,mBAC3CE,EAAcH,SAASC,cAAc,gBACrCG,EAAaJ,SAASC,cAAc,eAKpCI,EAAaL,SAASC,cAAc,eACpCK,EAAc,IAAIC,OAAO,cAEzBC,EAAe,GACfC,EAAS,EAiFbL,EAAWM,iBAAiB,SAAS,WACrC,IAAIC,EAASZ,EAAaa,MACtBC,EAAWX,EAAkBY,QAAQZ,EAAkBa,eAAeC,KACtEC,EAAuBd,EAAYe,QAZhC,YAEA,WAWHC,EAAe,GAEhBb,EAAac,KAAKT,KAnCJ,SAACA,EAAQE,EAAUI,GACpC,IACII,GADW,IAAIC,MACYC,iBAE/Bf,EAAagB,KAAK,CAClB,GAAMf,EACN,OAAUE,EACV,QAAWE,EACX,MAASI,EACT,QAAWI,IAEXZ,IAyBAgB,CAAWd,EAAQE,EAAUI,GAtFZ,SAAbS,IACJrB,EAAWsB,UAAU,GAErBnB,EAAaoB,SAAQ,SAAAC,GACrB,IAAIC,EAAU9B,SAAS+B,cAAc,MACrCD,EAAQE,UAAUC,IAAI,gBACtBH,EAAQH,UAAR,0BACmBE,EAAQlB,OAD3B,sBAEMkB,EAAQK,QAFd,sBAGML,EAAQM,QAHd,sBAIMN,EAAQO,MAJd,SAMA,IAAIC,EAAWrC,SAAS+B,cAAc,MAClCO,EAAStC,SAAS+B,cAAc,UAOpCO,EAAQC,UAAY,iBACpBD,EAAQE,UAAY,SACpBF,EAAQ1B,MAAQiB,EAAQY,GAGxBH,EAAQ5B,iBAAiB,SAAS,SAAAgC,GAClC,IAAIC,EAAYD,EAAME,OAAOhC,MAE7BJ,EAAaoB,SAAQ,SAACC,EAASgB,GAC5BF,GAAad,EAAQY,KAEhBjC,EAAasC,OAAOD,EAAI,GACxBnB,WAMRW,EAASU,YAAYT,GACrBR,EAAQiB,YAAYV,GAEpBhC,EAAW0C,YAAYjB,MA8CvBJ,GAGoB,KADpBP,EAAepB,KAEXoB,EAAaP,MAAQ,KAIzBoC,MAAM,qCAQNjD,EAAaW,iBAAiB,SAAS,SAACgC,GACxC,IAAIO,EAAUP,EAAMO,QACPlD,EAAaa,MAEZ,IAAXqC,GACH7C,EAAW8C,a","file":"static/js/main.6228f429.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nlet carnet_field = document.querySelector(\"#carnet_field\")\nlet schedule_dropdown = document.querySelector(\"#schedule_field\")\nlet late_switch = document.querySelector(\"#late_switch\")\nlet submit_btn = document.querySelector(\"#submit_btn\")\n\n\n\n\nlet table_body = document.querySelector(\"#table_body\")\nlet carnet_regex= new RegExp('^[0-9]{8}$')\n\nlet student_list = []\nlet serial = 0\n\nlet printArray = ()=>{\ntable_body.innerHTML=\"\"\n\nstudent_list.forEach(element =>{\nlet new_row = document.createElement(\"tr\")\nnew_row.classList.add(\"table-active\")\nnew_row.innerHTML =\n`<th scope='row'>${element.carnet}</th>\n<td>${element.horario}</td>\n<td>${element.ingreso}</td>\n<td>${element.tarde}</td>`\n\nlet new_cell = document.createElement(\"td\")\nlet new_btn= document.createElement(\"button\")\n\n\n\n/**\n* Personalización del botón\n*/\nnew_btn.className = \"btn btn-danger\"\nnew_btn.innerText = \"Borrar\"\nnew_btn.value = element.id;\n\n\nnew_btn.addEventListener(\"click\", event =>{\nlet id_actual = event.target.value\n\nstudent_list.forEach((element, pos)=>{\nif(id_actual == element.id){\n\n        student_list.splice(pos,1)\n        printArray()  \n}\n})\n})\n\n\nnew_cell.appendChild(new_btn)\nnew_row.appendChild(new_cell)\n\ntable_body.appendChild(new_row)\n\n})\n}\n\n/*\nFunción para agregar un hijo a la tabla\n*/\n\nlet addStudent = (carnet, schedule, late)=>{\nlet datetime = new Date()\nlet datetime_string = datetime.toLocaleString()\n\nstudent_list.push({\n\"id\": serial,\n\"carnet\": carnet,\n\"horario\": schedule,\n\"tarde\": late,\n\"ingreso\": datetime_string\n})\nserial++\n}\n\n/*\nFunción para parsear el valor booleano del late_switch\n*/\n\nlet parseLateSwitch= (value)=>{\nif(value){\nreturn \"Tardisimo\"\n}\nreturn \"A tiempo\"\n}\n\n/*\nListener para detectar el click en el boton\n*/\n\nsubmit_btn.addEventListener(\"click\", ()=>{\nlet carnet = carnet_field.value\nlet schedule = schedule_dropdown.options[schedule_dropdown.selectedIndex].text\nlet late = parseLateSwitch(late_switch.checked)\nlet campo_borrar = \"\";\n\nif(carnet_regex.test(carnet)){    \naddStudent(carnet, schedule, late)\nprintArray()\n\ncampo_borrar = carnet_field;\nif (campo_borrar != \"\") {\n    campo_borrar.value = \"\";\n}\n\n}else{\nalert(\"Formato de carnet no válido\")\n}\n})\n\n/*\nListener para disparar el botón cuando se aprete enter\n*/\n\ncarnet_field.addEventListener(\"keyup\", (event)=>{\nlet keyCode = event.keyCode\nlet carnet = carnet_field.value\n\nif(keyCode == 13){\nsubmit_btn.click()\n}\n\n\n})\n"],"sourceRoot":""}